{"version":3,"sources":["components/facerecognition/FaceRecognition.js","components/navigation/Navigation.js","components/imagelinkform/ImageLinkForm.js","components/signin/SignIn.js","components/register/Register.js","components/imagehistory/ImageHistory.js","particles/particlesConfig.js","App.js","serviceWorker.js","index.js"],"names":["FaceRecognition","allBorders","this","props","boxArea","map","area","i","className","key","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","alt","id","src","imageUrl","width","height","Component","Navigation","state","isImageHistory","setNavbar","setState","display","justifyContent","to","currentUser","Clarifai","require","app","App","apiKey","ImageLinkForm","currentUserId","match","params","currentUsername","input","displayBox","date","Date","setUser","a","axios","get","currentUserInfo","data","_id","username","calculateFaceLocation","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","onTextChange","event","previousData","target","name","value","onButtonClick","preventDefault","allFaces","models","predict","FACE_DETECT_MODEL","newDetect","outputs","regions","forEach","region","push","region_info","bounding_box","inputAt","inputById","inputByName","type","placeholder","onChange","url","onClick","SignIn","password","loggedIn","loginAttemptDate","currentDashboard","previousState","renderRedirect","verifyData","post","verifiedUser","alert","required","email","createdAt","createAccount","htmlFor","ImageHistory","allImages","getAllImages","arrayOfImages","Array","element","oneImage","particlesConfig","particles","number","density","enable","value_area","line_linked","shadow","color","blur","interactivity","onhover","mode","exact","path","component","Register","Boolean","window","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c91abad6.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './FaceRecognition.css'\r\n\r\nexport default class FaceRecognition extends Component {\r\n\r\n    render() {\r\n    \r\n        const allBorders = this.props.boxArea.map((area, i) => {\r\n            return (\r\n                <div className='bounding-box' key={i} style={{\r\n                    top: area.topRow, \r\n                    right: area.rightCol, \r\n                    bottom: area.bottomRow, \r\n                    left: area.leftCol}}\r\n                ></div>\r\n            )\r\n        })   \r\n\r\n\r\n        return(\r\n            <div className='center ma container'>\r\n                <div className=\"absolute mt4\">\r\n                    <img alt='' id='input-image' src={this.props.imageUrl} width=\"500px\" height=\"auto\"></img>\r\n                    {allBorders}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Navigation extends Component {\r\n\r\n    state = {\r\n        isImageHistory: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setNavbar()\r\n    }\r\n\r\n    setNavbar = () => {\r\n        this.setState({isImageHistory: this.props.isImageHistory})\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                {this.state.isImageHistory ?\r\n                <Link  to={`/dashboard/${this.props.currentUser}`} className='f3 link dim black underline pa3 pointer'> Dashboard </Link>\r\n                :\r\n                <Link  to={`/dashboard/history/${this.props.currentUser}`} className='f3 link dim black underline pa3 pointer'> Image History </Link>\r\n                }\r\n                <Link  to=\"/\" className='f3 link dim black underline pa3 pointer'> Sign Out </Link>\r\n            </nav>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport FaceRecognition from '../facerecognition/FaceRecognition'\r\nimport './ImageLinkForm.css'\r\nimport Navigation from '../navigation/Navigation'\r\nimport axios from 'axios'\r\n\r\n\r\nconst Clarifai = require('clarifai')\r\n\r\nconst app = new Clarifai.App({\r\n    apiKey: '39944fa1347a4b2bbd081ffed001395f'\r\n   });\r\n\r\nexport default class ImageLinkForm extends Component {\r\n\r\n    state = {\r\n        currentUserId: this.props.match.params.id,\r\n        currentUsername: '',\r\n        input: '',\r\n        imageUrl:'',\r\n        displayBox: [],\r\n        date: new Date()\r\n      }\r\n\r\n    componentDidMount() {\r\n        this.setUser()\r\n    }\r\n\r\n    setUser = async () => {\r\n        const currentUser = await axios.get(`/getuser/${this.props.match.params.id}`) \r\n        const currentUserInfo = {\r\n            currentUserId: currentUser.data._id,\r\n            currentUsername: currentUser.data.username\r\n        }\r\n        this.setState(currentUserInfo)\r\n    }\r\n      \r\n    calculateFaceLocation = (data) => {\r\n        const image = document.getElementById('input-image')\r\n        const width = Number(image.width)\r\n        const height = Number(image.height)\r\n        return {\r\n            leftCol: (data.left_col * width) * .985,\r\n            topRow: (data.top_row * height) * .985,\r\n            rightCol: (width - (data.right_col * width)) * .985,\r\n            bottomRow: (height - (data.bottom_row * height)) * .985\r\n        }\r\n    }\r\n\r\n    displayFaceBox = (displayBox) => {\r\n        this.setState({displayBox})\r\n        console.log(this.state.displayBox)\r\n    }\r\n\r\n    onTextChange = (event) => {\r\n        const previousData = { ...this.state }\r\n        previousData[event.target.name] = event.target.value\r\n        this.setState(previousData)\r\n    }\r\n\r\n    onButtonClick = async (event) => {\r\n        event.preventDefault()\r\n        const allFaces = []\r\n        this.setState({imageUrl: this.state.input}, async () => {\r\n            console.log('click')\r\n            const newDetect = await app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.imageUrl)\r\n            console.log(newDetect.outputs[0].data.regions)\r\n            newDetect.outputs[0].data.regions.forEach(region => \r\n                allFaces.push(this.calculateFaceLocation(region.region_info.bounding_box))\r\n            )\r\n            console.log(allFaces)\r\n            this.displayFaceBox(allFaces)    \r\n            const data = {\r\n                imageUrl: this.state.imageUrl,\r\n                inputAt: this.state.date,\r\n                inputById: this.state.currentUserId,\r\n                inputByName: this.state.currentUsername\r\n            }\r\n            console.log(data)\r\n            // const newImageInput = await axios.post('/image', data)\r\n            // console.log(newImageInput)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Navigation currentUser={this.props.match.params.id}/>\r\n                <p className='f3'>\r\n                    {'This will detect faces in your pictures.'}\r\n                </p>\r\n                <div className='image-recognizer'>\r\n                    <form className='form'>\r\n                        <input className='f4 w-70 center' type='text' placeholder='Image URL' name=\"input\" onChange={this.onTextChange} value={this.state.url}></input>\r\n                        <input className='w-30 grow f4 link ph2 pv1 dib white bg-light-blue' type='submit' value='Recognize' onClick={this.onButtonClick}></input>\r\n                    </form>\r\n                </div>\r\n                {this.state.imageUrl \r\n                ?\r\n                <FaceRecognition imageUrl={this.state.imageUrl} boxArea={this.state.displayBox}/>\r\n                : \r\n                null}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nexport default class SignIn extends Component {\r\n\r\n    state = {\r\n        currentUserId: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        loggedIn: false,\r\n        loginAttemptDate: new Date()\r\n    }\r\n\r\n    currentDashboard = `/dashboard/${this.state.currentUserId}`\r\n\r\n    onTextChange = (event) => {\r\n        const previousState = { ...this.state }\r\n        previousState[event.target.name] = event.target.value\r\n        this.setState(previousState)\r\n    }\r\n        \r\n\r\n    renderRedirect = () => {\r\n        if (this.state.loggedIn) {\r\n            return <Redirect to={this.currentDashboard}></Redirect>\r\n        }\r\n    }\r\n\r\n\r\n    verifyData = async (event) => {\r\n        event.preventDefault()\r\n        const currentUser = { ...this.state }\r\n        const verifiedUser = await axios.post('/verify', currentUser)\r\n        if (verifiedUser.data !== 'error') {\r\n            this.setState({currentUserId: verifiedUser.data._id}, () => {\r\n                this.currentDashboard = `/dashboard/${this.state.currentUserId}`\r\n                console.log(this.currentDashboard)\r\n                this.setState({loggedIn: true})\r\n            })\r\n        } else {\r\n            alert('Username/Password Incorrect')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"flex center h-100\">\r\n                {this.renderRedirect()}\r\n                <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                    <main className=\"pa4 black-80\">\r\n                        <form className=\"ba b--transparent ph0 mh0s\">\r\n                                <label className=\"db fw6 lh-copy f6 mt3\" placeholder='Username'>Username</label>\r\n                                <input\r\n                                    className=\"b input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    name=\"username\"\r\n                                    type=\"string\"\r\n                                    required\r\n                                    onChange={this.onTextChange}\r\n                                    value={this.state.username}\r\n                                ></input>\r\n                                <label className=\"db fw6 lh-copy f6 mt3\" placeholder='Password'>Password</label>\r\n                                <input\r\n                                    className=\"b input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    required\r\n                                    onChange={this.onTextChange}\r\n                                    value={this.state.password}\r\n                                ></input>\r\n                                <input\r\n                                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib mt3\" \r\n                                    type=\"submit\" \r\n                                    onClick={this.verifyData} \r\n                                    value=\"Login\"\r\n                                ></input>\r\n                        </form>\r\n                        <Link to=\"/register\" className=\"f6 link dim black db mt3\">Sign up</Link>\r\n                        <Link to=\"\" className=\"f6 link dim black db mt3\">Forgot your password?</Link>\r\n                    </main>\r\n                </article>\r\n            </div>\r\n        )\r\n    }\r\n} ","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nexport default class SignIn extends Component {\r\n\r\n    state = {\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n        createdAt: new Date()\r\n    }\r\n\r\n    onTextChange = (event) => {\r\n        const previousState = { ...this.state }\r\n        console.log(`${event.target.name}: ${event.target.value}`)\r\n        previousState[event.target.name] = event.target.value\r\n        this.setState(previousState)\r\n    }\r\n\r\n    createAccount = async (event) => {\r\n        event.preventDefault()\r\n        console.log('click')\r\n        const data = { ...this.state }\r\n        await axios.post('/register', data)\r\n        alert(`${this.state.email} registered!`)\r\n    }\r\n        \r\n    render() {\r\n        return(\r\n            <div className=\"flex center\">\r\n                <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                    <main className=\"pa4 black-80\">\r\n                        <form className=\"ba b--transparent ph0 mh0s\">\r\n                                <label className=\"db fw6 lh-copy f6 mt3\" htmlFor=\"username\" placeholder='Username'>Username</label>\r\n                                <input\r\n                                    className=\"b input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    name=\"username\"\r\n                                    type=\"string\"\r\n                                    required\r\n                                    onChange={this.onTextChange}\r\n                                    value={this.state.username}\r\n                                ></input>\r\n                                <label className=\"db fw6 lh-copy f6 mt3\" htmlFor=\"email\" placeholder='Email'>Email</label>\r\n                                <input\r\n                                    className=\"b input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    name=\"email\"\r\n                                    type=\"string\"\r\n                                    required\r\n                                    onChange={this.onTextChange}\r\n                                    value={this.state.email}\r\n                                ></input>   \r\n                                <label className=\"db fw6 lh-copy f6 mt3\" htmlFor=\"password\" placeholder='Password'>Password</label>\r\n                                <input\r\n                                    className=\"b input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    required\r\n                                    onChange={this.onTextChange}\r\n                                    value={this.state.password}\r\n                                ></input>\r\n                                <input\r\n                                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib mt3\" \r\n                                    type=\"submit\" \r\n                                    onClick={this.createAccount} \r\n                                    value=\"Register\"\r\n                                ></input>\r\n                        </form>\r\n                        <Link to=\"/\" className=\"f6 link dim black db mt3\">Back to login</Link>\r\n                    </main>\r\n                </article>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n","import React, { Component } from 'react'\r\nimport Navigation from '../navigation/Navigation'\r\nimport axios from 'axios'\r\n\r\n\r\nconst Clarifai = require('clarifai')\r\n\r\nconst app = new Clarifai.App({\r\n    apiKey: '39944fa1347a4b2bbd081ffed001395f'\r\n   });\r\n\r\nexport default class ImageHistory extends Component {\r\n\r\n    state = {\r\n        currentUserId: this.props.match.params.id,\r\n        currentUsername: '',\r\n        allImages: [],\r\n        isImageHistory: true\r\n      }\r\n\r\n    componentDidMount() {\r\n        this.setUser()\r\n        console.log(this.state.currentUserId)\r\n        this.getAllImages()\r\n    }\r\n\r\n    setUser = async () => {\r\n        const currentUser = await axios.get(`/getuser/${this.props.match.params.id}`) \r\n        const currentUserInfo = {\r\n            currentUserId: currentUser.data._id,\r\n            currentUsername: currentUser.data.username\r\n        }\r\n        this.setState(currentUserInfo)\r\n    }\r\n\r\n    getAllImages = async () => {\r\n        console.log(this.state.allImages)\r\n        const arrayOfImages = []\r\n        console.log(arrayOfImages instanceof Array)\r\n        const allImages = await axios.get(`/imagehistory/${this.props.match.params.id}`)\r\n        console.log(allImages.data instanceof Array)\r\n        allImages.data.forEach(element => {\r\n          arrayOfImages.push(element)  \r\n        })\r\n        this.setState({allImages: arrayOfImages})\r\n        console.log(this.state.allImages[0].imageUrl)\r\n    }\r\n      \r\n    // calculateFaceLocation = (data) => {\r\n    //     const image = document.getElementById('input-image')\r\n    //     const width = Number(image.width)\r\n    //     const height = Number(image.height)\r\n    //     return {\r\n    //         leftCol: (data.left_col * width) * .985,\r\n    //         topRow: (data.top_row * height) * .985,\r\n    //         rightCol: (width - (data.right_col * width)) * .985,\r\n    //         bottomRow: (height - (data.bottom_row * height)) * .985\r\n    //     }\r\n    // }\r\n\r\n    // recognizeFace = async (image) => {\r\n    //     const allFaces = []\r\n    //     console.log('click')\r\n    //     const newDetect = await app.models.predict(Clarifai.FACE_DETECT_MODEL, image)\r\n    //     console.log(newDetect.outputs[0].data.regions)\r\n    //     newDetect.outputs[0].data.regions.forEach(region => \r\n    //         allFaces.push(this.calculateFaceLocation(region.region_info.bounding_box))\r\n    //     )\r\n    //     console.log(allFaces)\r\n    //     return allFaces  \r\n    // }\r\n\r\n    render() {\r\n\r\n        const everyImage = this.state.allImages.map((oneImage, i) => {\r\n            console.log(oneImage)\r\n            return (\r\n                <div className=\"absolute mt4\">\r\n                    <img src={oneImage.imageUrl}/>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <Navigation currentUser={this.props.match.params.id} isImageHistory={this.state.isImageHistory}/>\r\n                <p className='f3'>\r\n                    {'Image History by Date'}\r\n                </p>\r\n                {this.state.allImages \r\n                ?\r\n                null\r\n                : \r\n                null}\r\n            </div>\r\n        )\r\n    }\r\n}","const particlesConfig = {\r\n    particles: {\r\n      number: {\r\n        value: 30,\r\n        density: {\r\n          enable: true,\r\n          value_area: 800\r\n        }\r\n      },\r\n      line_linked: {\r\n        shadow: {\r\n          enable: true,\r\n          color: \"#3CA9D1\",\r\n          blur: 5\r\n        }\r\n      },\r\n      interactivity: {\r\n        onhover: {\r\n          enable: false,\r\n          mode: \"repulse\"\r\n        },\r\n      }\r\n    }\r\n  }\r\n  \r\n  export default particlesConfig","import React, { Component } from 'react'\r\nimport { BrowserRouter  as Router, Switch, Route } from 'react-router-dom'\r\nimport ImageLinkForm from './components/imagelinkform/ImageLinkForm.js'\r\nimport SignIn from './components/signin/SignIn.js' \r\nimport Register from './components/register/Register.js' \r\nimport ImageHistory from './components/imagehistory/ImageHistory.js' \r\nimport './App.css'\r\nimport 'tachyons'\r\nimport Particles from 'react-particles-js'\r\nimport particlesConfig from './particles/particlesConfig.js'\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles params={particlesConfig} className='particles' />\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path='/' component={SignIn}/>\r\n            <Route path='/register' component={Register} />\r\n            <Route path='/dashboard/history/:id/' component={ImageHistory} />\r\n            <Route path='/dashboard/:id' component={ImageLinkForm}/>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}